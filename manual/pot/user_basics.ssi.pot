# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Debian Live Project
# This file is distributed under the same license as the live-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: live-manual 5.0~a2-1\n"
"POT-Creation-Date: 2022-01-08 13:39+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: en/about_manual.ssi:94 en/about_manual.ssi:102 en/about_manual.ssi:110
#: en/about_manual.ssi:118 en/about_manual.ssi:126 en/about_manual.ssi:134
#: en/appendix_style-guide.ssi:124 en/appendix_style-guide.ssi:134
#: en/appendix_style-guide.ssi:144 en/appendix_style-guide.ssi:154
#: en/appendix_style-guide.ssi:164 en/appendix_style-guide.ssi:177
#: en/examples.ssi:14 en/examples.ssi:30 en/examples.ssi:40 en/examples.ssi:54
#: en/examples.ssi:67 en/examples.ssi:83 en/examples.ssi:93 en/examples.ssi:106
#: en/examples.ssi:114 en/examples.ssi:124 en/examples.ssi:134
#: en/examples.ssi:149 en/examples.ssi:157 en/examples.ssi:165
#: en/examples.ssi:173 en/examples.ssi:189 en/examples.ssi:203
#: en/examples.ssi:211 en/examples.ssi:219 en/examples.ssi:235
#: en/examples.ssi:249 en/examples.ssi:257 en/examples.ssi:265
#: en/examples.ssi:273 en/examples.ssi:293 en/examples.ssi:301
#: en/examples.ssi:310 en/examples.ssi:320 en/project_bugs.ssi:69
#: en/project_coding-style.ssi:26 en/project_coding-style.ssi:48
#: en/project_coding-style.ssi:73 en/project_coding-style.ssi:83
#: en/project_coding-style.ssi:95 en/project_coding-style.ssi:106
#: en/project_coding-style.ssi:116 en/project_coding-style.ssi:145
#: en/project_coding-style.ssi:153 en/project_coding-style.ssi:163
#: en/project_coding-style.ssi:173 en/user_basics.ssi:34 en/user_basics.ssi:42
#: en/user_basics.ssi:52 en/user_basics.ssi:70 en/user_basics.ssi:84
#: en/user_basics.ssi:97 en/user_basics.ssi:105 en/user_basics.ssi:143
#: en/user_basics.ssi:151 en/user_basics.ssi:163 en/user_basics.ssi:174
#: en/user_basics.ssi:182 en/user_basics.ssi:194 en/user_basics.ssi:202
#: en/user_basics.ssi:210 en/user_basics.ssi:222 en/user_basics.ssi:234
#: en/user_basics.ssi:244 en/user_basics.ssi:254 en/user_basics.ssi:272
#: en/user_basics.ssi:303 en/user_basics.ssi:319 en/user_basics.ssi:327
#: en/user_basics.ssi:347 en/user_basics.ssi:374 en/user_basics.ssi:390
#: en/user_customization-binary.ssi:18 en/user_customization-contents.ssi:24
#: en/user_customization-contents.ssi:33 en/user_customization-contents.ssi:51
#: en/user_customization-installer.ssi:32
#: en/user_customization-installer.ssi:44 en/user_customization-packages.ssi:14
#: en/user_customization-packages.ssi:22 en/user_customization-packages.ssi:40
#: en/user_customization-packages.ssi:53 en/user_customization-packages.ssi:67
#: en/user_customization-packages.ssi:95 en/user_customization-packages.ssi:106
#: en/user_customization-packages.ssi:114
#: en/user_customization-packages.ssi:140
#: en/user_customization-packages.ssi:153
#: en/user_customization-packages.ssi:163
#: en/user_customization-packages.ssi:173
#: en/user_customization-packages.ssi:197
#: en/user_customization-packages.ssi:213
#: en/user_customization-packages.ssi:292
#: en/user_customization-packages.ssi:304
#: en/user_customization-packages.ssi:314
#: en/user_customization-packages.ssi:328
#: en/user_customization-packages.ssi:343
#: en/user_customization-packages.ssi:359
#: en/user_customization-packages.ssi:376 en/user_customization-runtime.ssi:14
#: en/user_customization-runtime.ssi:26 en/user_customization-runtime.ssi:44
#: en/user_customization-runtime.ssi:56 en/user_customization-runtime.ssi:75
#: en/user_customization-runtime.ssi:83 en/user_customization-runtime.ssi:92
#: en/user_customization-runtime.ssi:121 en/user_customization-runtime.ssi:131
#: en/user_customization-runtime.ssi:139 en/user_customization-runtime.ssi:148
#: en/user_customization-runtime.ssi:157 en/user_customization-runtime.ssi:172
#: en/user_customization-runtime.ssi:202 en/user_customization-runtime.ssi:210
#: en/user_customization-runtime.ssi:219 en/user_customization-runtime.ssi:229
#: en/user_customization-runtime.ssi:237 en/user_customization-runtime.ssi:245
#: en/user_customization-runtime.ssi:253 en/user_customization-runtime.ssi:261
#: en/user_customization-runtime.ssi:269 en/user_customization-runtime.ssi:277
#: en/user_customization-runtime.ssi:285 en/user_installation.ssi:22
#: en/user_installation.ssi:46 en/user_installation.ssi:56
#: en/user_installation.ssi:64 en/user_installation.ssi:74
#: en/user_installation.ssi:82 en/user_installation.ssi:90
#: en/user_installation.ssi:110 en/user_installation.ssi:125
#: en/user_installation.ssi:138 en/user_managing_a_configuration.ssi:22
#: en/user_managing_a_configuration.ssi:32
#: en/user_managing_a_configuration.ssi:55
#: en/user_managing_a_configuration.ssi:67
#: en/user_managing_a_configuration.ssi:76 en/user_overview.ssi:34
#: en/user_overview.ssi:47 en/user_overview.ssi:55
msgid "code{"
msgstr ""

#. type: Plain text
#: en/about_manual.ssi:98 en/about_manual.ssi:106 en/about_manual.ssi:114
#: en/about_manual.ssi:122 en/about_manual.ssi:130 en/about_manual.ssi:138
#: en/appendix_style-guide.ssi:128 en/appendix_style-guide.ssi:138
#: en/appendix_style-guide.ssi:148 en/appendix_style-guide.ssi:158
#: en/appendix_style-guide.ssi:173 en/appendix_style-guide.ssi:182
#: en/examples.ssi:20 en/examples.ssi:34 en/examples.ssi:44 en/examples.ssi:61
#: en/examples.ssi:71 en/examples.ssi:89 en/examples.ssi:102
#: en/examples.ssi:110 en/examples.ssi:118 en/examples.ssi:128
#: en/examples.ssi:141 en/examples.ssi:153 en/examples.ssi:161
#: en/examples.ssi:169 en/examples.ssi:177 en/examples.ssi:197
#: en/examples.ssi:207 en/examples.ssi:215 en/examples.ssi:231
#: en/examples.ssi:239 en/examples.ssi:253 en/examples.ssi:261
#: en/examples.ssi:269 en/examples.ssi:277 en/examples.ssi:297
#: en/examples.ssi:306 en/examples.ssi:316 en/examples.ssi:332
#: en/project_bugs.ssi:73 en/project_coding-style.ssi:38
#: en/project_coding-style.ssi:69 en/project_coding-style.ssi:79
#: en/project_coding-style.ssi:89 en/project_coding-style.ssi:102
#: en/project_coding-style.ssi:112 en/project_coding-style.ssi:123
#: en/project_coding-style.ssi:149 en/project_coding-style.ssi:157
#: en/project_coding-style.ssi:169 en/project_coding-style.ssi:179
#: en/user_basics.ssi:38 en/user_basics.ssi:46 en/user_basics.ssi:56
#: en/user_basics.ssi:75 en/user_basics.ssi:89 en/user_basics.ssi:101
#: en/user_basics.ssi:109 en/user_basics.ssi:147 en/user_basics.ssi:155
#: en/user_basics.ssi:168 en/user_basics.ssi:178 en/user_basics.ssi:186
#: en/user_basics.ssi:198 en/user_basics.ssi:206 en/user_basics.ssi:214
#: en/user_basics.ssi:226 en/user_basics.ssi:238 en/user_basics.ssi:248
#: en/user_basics.ssi:258 en/user_basics.ssi:295 en/user_basics.ssi:307
#: en/user_basics.ssi:323 en/user_basics.ssi:331 en/user_basics.ssi:358
#: en/user_basics.ssi:378 en/user_basics.ssi:394
#: en/user_customization-binary.ssi:25 en/user_customization-contents.ssi:29
#: en/user_customization-contents.ssi:43 en/user_customization-contents.ssi:55
#: en/user_customization-installer.ssi:38
#: en/user_customization-installer.ssi:49 en/user_customization-packages.ssi:18
#: en/user_customization-packages.ssi:26 en/user_customization-packages.ssi:45
#: en/user_customization-packages.ssi:59 en/user_customization-packages.ssi:71
#: en/user_customization-packages.ssi:100
#: en/user_customization-packages.ssi:110
#: en/user_customization-packages.ssi:118
#: en/user_customization-packages.ssi:145
#: en/user_customization-packages.ssi:159
#: en/user_customization-packages.ssi:169
#: en/user_customization-packages.ssi:179
#: en/user_customization-packages.ssi:203
#: en/user_customization-packages.ssi:218
#: en/user_customization-packages.ssi:296
#: en/user_customization-packages.ssi:308
#: en/user_customization-packages.ssi:318
#: en/user_customization-packages.ssi:333
#: en/user_customization-packages.ssi:347
#: en/user_customization-packages.ssi:372
#: en/user_customization-packages.ssi:381 en/user_customization-runtime.ssi:18
#: en/user_customization-runtime.ssi:30 en/user_customization-runtime.ssi:48
#: en/user_customization-runtime.ssi:69 en/user_customization-runtime.ssi:79
#: en/user_customization-runtime.ssi:88 en/user_customization-runtime.ssi:97
#: en/user_customization-runtime.ssi:125 en/user_customization-runtime.ssi:135
#: en/user_customization-runtime.ssi:144 en/user_customization-runtime.ssi:153
#: en/user_customization-runtime.ssi:162 en/user_customization-runtime.ssi:180
#: en/user_customization-runtime.ssi:206 en/user_customization-runtime.ssi:215
#: en/user_customization-runtime.ssi:223 en/user_customization-runtime.ssi:233
#: en/user_customization-runtime.ssi:241 en/user_customization-runtime.ssi:249
#: en/user_customization-runtime.ssi:257 en/user_customization-runtime.ssi:265
#: en/user_customization-runtime.ssi:273 en/user_customization-runtime.ssi:281
#: en/user_customization-runtime.ssi:289 en/user_installation.ssi:26
#: en/user_installation.ssi:50 en/user_installation.ssi:60
#: en/user_installation.ssi:70 en/user_installation.ssi:78
#: en/user_installation.ssi:86 en/user_installation.ssi:94
#: en/user_installation.ssi:115 en/user_installation.ssi:132
#: en/user_installation.ssi:142 en/user_managing_a_configuration.ssi:28
#: en/user_managing_a_configuration.ssi:43
#: en/user_managing_a_configuration.ssi:61
#: en/user_managing_a_configuration.ssi:72
#: en/user_managing_a_configuration.ssi:80 en/user_overview.ssi:41
#: en/user_overview.ssi:51 en/user_overview.ssi:59
msgid "}code"
msgstr ""

#. type: Plain text
#: en/examples.ssi:108 en/user_basics.ssi:44
#, no-wrap
msgid " $ lb config\n"
msgstr ""

#. type: Plain text
#: en/examples.ssi:126 en/examples.ssi:237 en/user_basics.ssi:54
#: en/user_basics.ssi:212 en/user_basics.ssi:256
#, no-wrap
msgid " # lb build\n"
msgstr ""

#. type: Plain text
#: en/examples.ssi:151 en/user_basics.ssi:236
#, no-wrap
msgid " # lb clean\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:2
msgid ":B~ The basics"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:4
msgid "1~the-basics The basics"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:6
msgid ""
"This chapter contains a brief overview of the build process and instructions "
"for using the three most commonly used image types. The most versatile image "
"type, #{iso-hybrid}#, may be used on a virtual machine, optical medium or "
"USB portable storage device. In certain special cases, as explained later, "
"the #{hdd}# type may be more suitable. The chapter includes detailed "
"instructions for building and using a #{netboot}# type image, which is a bit "
"more involved due to the setup required on the server. This is an slightly "
"advanced topic for anyone who is not already familiar with netbooting, but "
"it is included here because once the setup is done, it is a very convenient "
"way to test and deploy images for booting on the local network without the "
"hassle of dealing with image media."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:8
msgid ""
"The section finishes with a quick introduction to {webbooting}#webbooting "
"which is, perhaps, the easiest way of using different images for different "
"purposes, switching from one to the other as needed using the internet as a "
"means."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:10
msgid ""
"Throughout the chapter, we will often refer to the default filenames "
"produced by live-build. If you are {downloading a prebuilt image}"
"#downloading-prebuilt-images instead, the actual filenames may vary."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:12
msgid "2~what-is-live What is a live system?"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:14
msgid ""
"A live system usually means an operating system booted on a computer from a "
"removable medium, such as a CD-ROM or USB stick, or from a network, ready to "
"use without any installation on the usual drive(s), with auto-configuration "
"done at run time (see {Terms}#terms)."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:16
msgid ""
"With live systems, it's an operating system, built for one of the supported "
"architectures (currently amd64 and i386). It is made from the following "
"parts:"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:18
msgid "_* *{Linux kernel image}*, usually named #{vmlinuz*}#"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:20
msgid ""
"_* *{Initial RAM disk image (initrd)}*: a RAM disk set up for the Linux "
"boot, containing modules possibly needed to mount the System image and some "
"scripts to do it."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:22
msgid ""
"_* *{System image}*: The operating system's filesystem image. Usually, a "
"SquashFS compressed filesystem is used to minimize the live system image "
"size. Note that it is read-only. So, during boot the live system will use a "
"RAM disk and 'union' mechanism to enable writing files within the running "
"system. However, all modifications will be lost upon shutdown unless "
"optional persistence is used (see {Persistence}#persistence)."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:24
msgid ""
"_* *{Bootloader}*: A small piece of code crafted to boot from the chosen "
"medium, possibly presenting a prompt or menu to allow selection of options/"
"configuration. It loads the Linux kernel and its initrd to run with an "
"associated system filesystem. Different solutions can be used, depending on "
"the target medium and format of the filesystem containing the previously "
"mentioned components: isolinux to boot from a CD or DVD in ISO9660 format, "
"syslinux for HDD or USB drive booting from a VFAT partition, extlinux for "
"ext2/3/4 and btrfs partitions, pxelinux for PXE netboot, GRUB for ext2/3/4 "
"partitions, etc."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:26
msgid ""
"You can use live-build to build the system image from your specifications, "
"set up a Linux kernel, its initrd, and a bootloader to run them, all in one "
"medium-dependent format (ISO9660 image, disk image, etc.)."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:28
msgid "2~building-iso-hybrid First steps: building an ISO hybrid image"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:30
msgid ""
"Regardless of the image type, you will need to perform the same basic steps "
"to build an image each time. As a first example, create a build directory, "
"change to that directory and then execute the following sequence of live-"
"build commands to create a basic ISO hybrid image containing a default live "
"system without X.org. It is suitable for burning to CD or DVD media, and "
"also to copy onto a USB stick."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:32
msgid ""
"The name of the working directory is absolutely up to you, but if you take a "
"look at the examples used throughout live-manual, it is a good idea to use a "
"name that helps you identify the image you are working with in each "
"directory, especially if you are working or experimenting with different "
"image types. In this case you are going to build a default system so let's "
"call it, for example, live-default."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:36
#, no-wrap
msgid " $ mkdir live-default && cd live-default\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:40
msgid ""
"Then, run the #{lb config}# command. This will create a \"config/\" "
"hierarchy in the current directory for use by other commands:"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:48
msgid ""
"No parameters are passed to these commands, so defaults for all of their "
"various options will be used. See {The lb config command}#lb-config for more "
"details."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:50
msgid ""
"Now that the \"config/\" hierarchy exists, build the image with the #{lb "
"build}# command:"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:58
msgid ""
"This process can take a while, depending on the speed of your computer and "
"your network connection. When it is complete, there should be a #{live-image-"
"i386.hybrid.iso}# image file, ready to use, in the current directory."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:60
#, no-wrap
msgid "*{Note:}* If you are building on an amd64 system the name of the resulting image will be #{live-image-amd64.hybrid.iso}#. Keep in mind this naming convention throughout the manual.\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:62
msgid "2~using-iso-hybrid Using an ISO hybrid live image"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:64
msgid ""
"After either building or downloading an ISO hybrid image, which can be "
"obtained at https://www.debian.org/CD/live/, the usual next step is to "
"prepare your medium for booting, either CD-R(W) or DVD-R(W) optical media or "
"a USB stick."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:66
msgid "3~burning-iso-image Burning an ISO image to a physical medium"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:68
msgid ""
"Burning an ISO image is easy. Just install /{xorriso}/ and use it from the "
"command-line to burn the image. For instance:"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:73
#, no-wrap
msgid ""
" # apt-get install xorriso\n"
" $ xorriso -as cdrecord -v dev=/dev/sr0 blank=as_needed live-image-i386.hybrid.iso\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:77
msgid "3~copying-iso-hybrid-to-usb Copying an ISO hybrid image to a USB stick"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:79
msgid ""
"ISO images prepared with #{xorriso}#, can be simply copied to a USB stick "
"with the #{cp}# program or an equivalent. Plug in a USB stick with a size "
"large enough for your image file and determine which device it is, which we "
"hereafter refer to as #{${USBSTICK}}#. This is the device file of your key, "
"such as #{/dev/sdb}#, not a partition, such as #{/dev/sdb1}#! You can find "
"the right device name by looking in #{dmesg}#'s output after plugging in the "
"stick, or better yet, #{ls -l /dev/disk/by-id}#."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:82
msgid ""
"Once you are certain you have the correct device name, use the #{cp}# "
"command to copy the image to the stick.  *{This will definitely overwrite "
"any previous contents on your stick!}*"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:87
#, no-wrap
msgid ""
" $ cp live-image-i386.hybrid.iso ${USBSTICK}\n"
" $ sync\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:91
#, no-wrap
msgid "*{Note:}* The /{sync}/ command is useful to ensure that all the data, which is stored in memory by the kernel while copying the image, is written to the USB stick.\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:93
msgid "3~using-usb-extra-space Using the space left on a USB stick"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:95
msgid ""
"After copying the #{live-image-i386.hybrid.iso}# to a USB stick, the first "
"partition on the device will be filled up by the live system. To use the "
"remaining free space, use a partitioning tool such as /{gparted}/ or /"
"{parted}/ to create a new partition on the stick."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:99
#, no-wrap
msgid " # gparted ${USBSTICK}\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:103
msgid ""
"After the partition is created, where #{${PARTITION}}# is the name of the "
"partition, such as #{/dev/sdb2}#, you have to create a filesystem on it. One "
"possible choice would be ext4."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:107
#, no-wrap
msgid " # mkfs.ext4 ${PARTITION}\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:111
#, no-wrap
msgid "*{Note:}* If you want to use the extra space with Windows, apparently that OS cannot normally access any partitions but the first. Some solutions to this problem have been discussed on our {mailing list}#contact, but it seems there are no easy answers.\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:113
#, no-wrap
msgid "*{Remember: Every time you install a new live-image-i386.hybrid.iso on the stick, all data on the stick will be lost because the partition table is overwritten by the contents of the image, so back up your extra partition first to restore again after updating the live image.}*\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:115
msgid "3~booting-live-medium Booting the live medium"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:117
msgid ""
"The first time you boot your live medium, whether CD, DVD, USB key, or PXE "
"boot, some setup in your computer's BIOS may be needed first. Since BIOSes "
"vary greatly in features and key bindings, we cannot get into the topic in "
"depth here. Some BIOSes provide a key to bring up a menu of boot devices at "
"boot time, which is the easiest way if it is available on your system. "
"Otherwise, you need to enter the BIOS configuration menu and change the boot "
"order to place the boot device for the live system before your normal boot "
"device."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:119
msgid ""
"Once you've booted the medium, you are presented with a boot menu. If you "
"just press enter here, the system will boot using the default entry, #{Live}"
"# and default options. For more information about boot options, see the "
"\"help\" entry in the menu and also the live-boot and live-config man pages "
"found within the live system."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:121
msgid ""
"Assuming you've selected #{Live}# and booted a default desktop live image, "
"after the boot messages scroll by, you should be automatically logged into "
"the #{user}# account and see a desktop, ready to use. If you have booted a "
"console-only image, you should be automatically logged in on the console to "
"the #{user}# account and see a shell prompt, ready to use."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:123
msgid "2~using-virtual-machine Using a virtual machine for testing"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:125
msgid ""
"It can be a great time-saver for the development of live images to run them "
"in a virtual machine (VM). This is not without its caveats:"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:127
msgid ""
"_* Running a VM requires enough RAM for both the guest OS and the host and a "
"CPU with hardware support for virtualization is recommended."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:129
msgid ""
"_* There are some inherent limitations to running on a VM, e.g. poor video "
"performance, limited choice of emulated hardware."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:131
msgid ""
"_* When developing for specific hardware, there is no substitute for running "
"on the hardware itself."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:133
msgid ""
"_* Occasionally there are bugs that relate only to running in a VM. When in "
"doubt, test your image directly on the hardware."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:135
msgid ""
"Provided you can work within these constraints, survey the available VM "
"software and choose one that is suitable for your needs."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:137
msgid "3~testing-iso-with-qemu Testing an ISO image with QEMU"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:139
msgid ""
"The most versatile VM in Debian is QEMU. If your processor has hardware "
"support for virtualization, use the /{qemu-kvm}/ package; the /{qemu-kvm}/ "
"package description briefly lists the requirements."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:141
msgid ""
"First, install /{qemu-kvm}/ if your processor supports it. If not, install /"
"{qemu}/, in which case the program name is #{qemu}# instead of #{kvm}# in "
"the following examples. The /{qemu-utils}/ package is also valuable for "
"creating virtual disk images with #{qemu-img}#."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:145
#, no-wrap
msgid " # apt-get install qemu-kvm qemu-utils\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:149
msgid "Booting an ISO image is simple:"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:153
#, no-wrap
msgid " $ kvm -cdrom live-image-i386.hybrid.iso\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:157
msgid "See the man pages for more details."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:159
msgid "3~testing-iso-with-virtualbox Testing an ISO image with VirtualBox"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:161
msgid "In order to test the ISO with /{virtualbox}/:"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:166
#, no-wrap
msgid ""
" # apt-get install virtualbox virtualbox-qt virtualbox-dkms\n"
" $ virtualbox\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:170
msgid ""
"Create a new virtual machine, change the storage settings to use #{live-"
"image-i386.hybrid.iso}# as the CD/DVD device, and start the machine."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:172
#, no-wrap
msgid "*{Note:}* For live systems containing X.org that you want to test with /{virtualbox}/, you may wish to include the VirtualBox X.org driver package, /{virtualbox-guest-dkms}/ and /{virtualbox-guest-x11}/, in your live-build configuration. Otherwise, the resolution is limited to 800x600.\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:176
#, no-wrap
msgid " $ echo \"virtualbox-guest-dkms virtualbox-guest-x11\" >> config/package-lists/my.list.chroot\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:180
msgid ""
"In order to make the dkms package work, also the kernel headers for the "
"kernel flavour used in your image need to be installed. Instead of manually "
"listing the correct /{linux-headers}/ package in above created package list, "
"the selection of the right package can be done automatically by live-build."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:184
#, no-wrap
msgid "  $ lb config --linux-packages \"linux-image linux-headers\"\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:188
msgid "2~using-hdd-image Building and using an HDD image"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:190
msgid ""
"Building an HDD image is similar to an ISO hybrid one in all respects except "
"you specify #{-b hdd}# and the resulting filename is #{live-image-i386.img}# "
"which cannot be burnt to optical media. It is suitable for booting from USB "
"sticks, USB hard drives, and various other portable storage devices. "
"Normally, an ISO hybrid image can be used for this purpose instead, but if "
"you have a BIOS which does not handle hybrid images properly, you need an "
"HDD image."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:192
#, no-wrap
msgid "*{Note:}* if you created an ISO hybrid image with the previous example, you will need to clean up your working directory with the #{lb clean}# command (see {The lb clean command}#lb-clean):\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:196
#, no-wrap
msgid " # lb clean --binary\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:200
msgid ""
"Run the #{lb config}# command as before, except this time specifying the HDD "
"image type:"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:204
#, no-wrap
msgid " $ lb config -b hdd\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:208 en/user_basics.ssi:252
msgid "Now build the image with the #{lb build}# command:"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:216
msgid ""
"When the build finishes, a #{live-image-i386.img}# file should be present in "
"the current directory."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:218
msgid ""
"The generated binary image contains a VFAT partition and the syslinux "
"bootloader, ready to be directly written on a USB device. Once again, using "
"an HDD image is just like using an ISO hybrid one on USB. Follow the "
"instructions in {Using an ISO hybrid live image}#using-iso-hybrid, except "
"use the filename #{live-image-i386.img}# instead of #{live-image-i386.hybrid."
"iso}#."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:220
msgid ""
"Likewise, to test an HDD image with Qemu, install /{qemu}/ as described "
"above in {Testing an ISO image with QEMU}#testing-iso-with-qemu. Then run "
"#{kvm}# or #{qemu}#, depending on which version your host system needs, "
"specifying #{live-image-i386.img}# as the first hard drive."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:224
#, no-wrap
msgid " $ kvm -hda live-image-i386.img\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:228
msgid "2~building-netboot-image Building a netboot image"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:230
msgid ""
"The following sequence of commands will create a basic netboot image "
"containing a default live system without X.org. It is suitable for booting "
"over the network."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:232
#, no-wrap
msgid "*{Note:}* if you performed any previous examples, you will need to clean up your working directory with the #{lb clean}# command:\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:240
msgid ""
"In this specific case, a #{lb clean --binary}# would not be enough to clean "
"up the necessary stages. The cause for this is that in netboot setups, a "
"different initramfs configuration needs to be used which live-build performs "
"automatically when building netboot images. Since the initramfs creation "
"belongs to the chroot stage, switching to netboot in an existing build "
"directory means to rebuild the chroot stage too. Therefore, #{lb clean}# "
"(which will remove the chroot stage, too) needs to be used."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:242
msgid ""
"Run the #{lb config}# command as follows to configure your image for "
"netbooting:"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:246
#, no-wrap
msgid " $ lb config -b netboot --net-root-path \"/srv/debian-live\" --net-root-server \"192.168.0.2\"\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:250
msgid ""
"In contrast with the ISO and HDD images, netbooting does not, itself, serve "
"the filesystem image to the client, so the files must be served via NFS. "
"Different network filesystems can be chosen through lb config. The #{--net-"
"root-path}# and #{--net-root-server}# options specify the location and "
"server, respectively, of the NFS server where the filesystem image will be "
"located at boot time. Make sure these are set to suitable values for your "
"network and server."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:260
msgid ""
"In a network boot, the client runs a small piece of software which usually "
"resides on the EPROM of the Ethernet card. This program sends a DHCP request "
"to get an IP address and information about what to do next. Typically, the "
"next step is getting a higher level bootloader via the TFTP protocol. That "
"could be pxelinux, GRUB, or even boot directly to an operating system like "
"Linux."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:262
msgid ""
"For example, if you unpack the generated #{live-image-i386.netboot.tar}# "
"archive in the #{/srv/debian-live}# directory, you'll find the filesystem "
"image in #{live/filesystem.squashfs}# and the kernel, initrd and pxelinux "
"bootloader in #{tftpboot/}#."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:264
msgid ""
"We must now configure three services on the server to enable netbooting: the "
"DHCP server, the TFTP server and the NFS server."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:266
msgid "3~ DHCP server"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:268
msgid ""
"We must configure our network's DHCP server to be sure to give an IP address "
"to the netbooting client system, and to advertise the location of the PXE "
"bootloader."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:270
msgid ""
"Here is an example for inspiration, written for the ISC DHCP server #{isc-"
"dhcp-server}# in the #{/etc/dhcp/dhcpd.conf}# configuration file:"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:274
#, no-wrap
msgid " # /etc/dhcp/dhcpd.conf - configuration file for isc-dhcp-server\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:276
#, no-wrap
msgid " ddns-update-style none;\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:279
#, no-wrap
msgid ""
" option domain-name \"example.org\";\n"
" option domain-name-servers ns1.example.org, ns2.example.org;\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:282
#, no-wrap
msgid ""
" default-lease-time 600;\n"
" max-lease-time 7200;\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:284
#, no-wrap
msgid " log-facility local7;\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:293
#, no-wrap
msgid ""
" subnet 192.168.0.0 netmask 255.255.255.0 {\n"
"   range 192.168.0.1 192.168.0.254;\n"
"   filename \"pxelinux.0\";\n"
"   next-server 192.168.0.2;\n"
"   option subnet-mask 255.255.255.0;\n"
"   option broadcast-address 192.168.0.255;\n"
"   option routers 192.168.0.1;\n"
"}\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:297
msgid "3~ TFTP server"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:299
msgid "This serves the kernel and initial ramdisk to the system at run time."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:301
msgid ""
"You should install the /{tftpd-hpa}/ package. It can serve all files "
"contained inside a root directory, usually #{/srv/tftp}#. To let it serve "
"files inside #{/srv/debian-live/tftpboot}#, run as root the following "
"command:"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:305
#, no-wrap
msgid " # dpkg-reconfigure -plow tftpd-hpa\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:309
msgid "and fill in the new tftp server directory when being asked about it."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:311
msgid "3~ NFS server"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:313
msgid ""
"Once the guest computer has downloaded and booted a Linux kernel and loaded "
"its initrd, it will try to mount the Live filesystem image through a NFS "
"server."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:315
msgid "You need to install the /{nfs-kernel-server}/ package."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:317
msgid ""
"Then, make the filesystem image available through NFS by adding a line like "
"the following to #{/etc/exports}#:"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:321
#, no-wrap
msgid " /srv/debian-live *(ro,async,no_root_squash,no_subtree_check)\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:325
msgid ""
"and tell the NFS server about this new export with the following command:"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:329
#, no-wrap
msgid " # exportfs -rv\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:333
msgid ""
"Setting up these three services can be a little tricky. You might need some "
"patience to get all of them working together. For more information, see the "
"syslinux wiki at https://wiki.syslinux.org/wiki/index.php?title=PXELINUX or "
"the Debian Installer Manual's TFTP Net Booting section at https://www.debian."
"org/releases/stable/i386/ch04s05.en.html. They might help, as their "
"processes are very similar."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:335
msgid "3~ Netboot testing HowTo"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:337
msgid ""
"Netboot image creation is made easy with live-build, but testing the images "
"on physical machines can be really time consuming."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:339
msgid "To make our life easier, we can use virtualization."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:341
msgid "3~ Qemu"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:343
msgid "_* Install /{qemu}/, /{bridge-utils}/, /{sudo}/."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:345
msgid "Edit #{/etc/qemu-ifup}#:"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:356
#, no-wrap
msgid ""
" #!/bin/sh\n"
" sudo -p \"Password for $0:\" /sbin/ifconfig $1 172.20.0.1\n"
" echo \"Executing /etc/qemu-ifup\"\n"
" echo \"Bringing up $1 for bridged mode...\"\n"
" sudo /sbin/ifconfig $1 0.0.0.0 promisc up\n"
" echo \"Adding $1 to br0...\"\n"
" sudo /usr/sbin/brctl addif br0 $1\n"
" sleep 2\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:360
msgid "Get, or build a #{grub-floppy-netboot}#."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:362
msgid ""
"Launch #{qemu}# with \"#{-net nic,vlan=0 -net tap,vlan=0,ifname=tun0}#\""
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:364
msgid "2~webbooting Webbooting"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:366
msgid ""
"Webbooting is a convenient way of retrieving and booting live systems using "
"the internet as a means. The requirements for webbooting are very few. On "
"the one hand, you need a medium with a bootloader, an initial ramdisk and a "
"kernel. On the other hand, a web server to store the squashfs files which "
"contain the filesystem."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:368
msgid "3~ Getting the webboot files"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:370
msgid ""
"As usual, you can build the images yourself or use the prebuilt files, which "
"are available on the project's download page at https://www.debian.org/CD/"
"live/. Using prebuilt images would be handy for doing initial testing until "
"one can fine tune their own needs. If you have built a live image you will "
"find the files needed for webbooting in the build directory under #{binary/"
"live/}#. The files are called #{vmlinuz}#, #{initrd.img}# and #{filesystem."
"squashfs}#."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:372
msgid ""
"It is also possible to extract those files from an already existing iso "
"image. In order to achieve that, loopback mount the image as follows:"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:376
#, no-wrap
msgid " # mount -o loop image.iso /mnt\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:380
msgid ""
"The files are to be found under the #{live/}# directory. In this specific "
"case, it would be #{/mnt/live/}#. This method has the disadvantage that you "
"need to be root to be able to mount the image. However, it has the advantage "
"that it is easily scriptable and thus, easily automated."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:382
msgid ""
"But undoubtedly, the easiest way of extracting the files from an iso image "
"and uploading it to the web server at the same time, is using the midnight "
"commander or /{mc}/. If you have the /{genisoimage}/ package installed, the "
"two-pane file manager allows you to browse the contents of an iso file in "
"one pane and upload the files via ftp in the other pane. Even though this "
"method requires manual work, it does not require root privileges."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:384
msgid "3~ Booting webboot images"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:386
msgid ""
"While some users will prefer virtualization to test webbooting, we refer to "
"real hardware here to match the following possible use case which should "
"only be considered as an example."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:388
msgid ""
"In order to boot a webboot image it is enough to have the components "
"mentioned above, i.e. #{vmlinuz}# and #{initrd.img}# in a usb stick inside a "
"directory named #{live/}# and install syslinux as bootloader. Then boot from "
"the usb stick and type #{fetch=URL/PATH/TO/FILE}# at the boot options. live-"
"boot will retrieve the squashfs file and store it into ram. This way, it is "
"possible to use the downloaded compressed filesystem as a regular live "
"system. For example:"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:392
#, no-wrap
msgid " append boot=live components fetch=http://192.168.2.50/images/webboot/filesystem.squashfs\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:395
#, no-wrap
msgid "*{Use case:}* You have a web server in which you have stored two squashfs files, one which contains a full desktop, like for example gnome, and a standard one. If you need a graphical environment for one machine, you can plug your usb stick in and webboot the gnome image. If you need one of the tools included in the second type of image, perhaps for another machine, you can webboot the standard one.\n"
msgstr ""
